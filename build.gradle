group 'org.sewas'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "jacoco"
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:1.2.2")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.0.RELEASE")
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:1.1.2.BUILD-SNAPSHOT"
    }
}

dependencies {
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'

    testCompile group: 'net.serenity-bdd', name: 'serenity-core', version: '1.2.2'
    testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: '1.2.2'
    testCompile group: 'net.serenity-bdd', name: 'serenity-cucumber', version: '1.1.23'
    testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: '1.2.2'

    compile project(':util')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '1.5.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '1.5.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.5.0.RELEASE'
    compile group: 'com.h2database', name: 'h2', version: '1.3.148'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-test-autoconfigure', version: '1.5.0.RELEASE'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-test', version: '1.5.0.RELEASE'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.0.RELEASE'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.5.0.RELEASE'
    testCompile group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock'
}

gradle.startParameter.continueOnFailure = true

task runUnitTests(type: Test) {

    description = "Runs all unit tests for leagueTable"

    group 'testing'

    exclude 'org/sewas/features/**'
    useJUnit {
        excludeCategories 'utils.testing.IntegrationTest'
    }
}

task runIntegrationTests(type: Test) {

    description = "Runs all Integration tests annotated with '@Category(IntegrationTest.class)'"

    group 'testing'

    exclude 'org/sewas/features/**'
    useJUnit {
        includeCategories 'utils.testing.IntegrationTest'
    }
}

task runAcceptanceTests(type: Test) {

    description = "Runs all Acceptance tests"

    group 'testing'

    include 'org/sewas/features/**'
}

task unitTestReport(type: JacocoReport){

    description = "Creates code coverage for unitTests"

    group 'coverage'

    executionData runUnitTests
    sourceSets sourceSets.main
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'org/sewas/domain/**',
                    'org/sewas/rest/dto/**',
                    'org/sewas/exception/**',
                    'org/sewas/*.class'
                ])
        })
    }
}

task integrationTestReport(type: JacocoReport){

    description = "Creates code coverage for integrationTests"

    group 'coverage'

    executionData runIntegrationTests
    sourceSets sourceSets.main
}

task unitAndITcoverageReport(type: JacocoReport) {

    description = "Creates code coverage for unit- and integrationTests"

    group 'coverage'

    executionData runUnitTests, runIntegrationTests
    sourceSets sourceSets.main
}

sourceSets {

    test {
        test.java.srcDir "src/test/java"
        test.resources.srcDir "src/test/resources"
    }

    main {
        main.java.srcDir "src/main/java"
        main.resources.srcDir "src/main/resources"
    }

    integration {
        test.java.srcDir "src/integration/java"
        test.resources.srcDir "src/integration/resources"
        compileClasspath += sourceSets.test.runtimeClasspath
    }

    acceptance {
        test.java.srcDir "src/acceptance/java"
        test.resources.srcDir "src/acceptance/resources"
        compileClasspath += sourceSets.test.runtimeClasspath
    }

}